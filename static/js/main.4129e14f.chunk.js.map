{"version":3,"sources":["ApiService.js","components/Maker.jsx","components/Model.jsx","components/Years.jsx","components/Search.jsx","components/City.jsx","Home.jsx","serviceWorker.js","index.js"],"names":["ApiKey","Maker","props","toggle","bind","changeValue","state","dropdownOpen","dropDownValue","this","setState","prevState","e","text","target","textContent","onSelect","array","maker","forEach","item","i","dropdownItem","DropdownItem","key","onClick","push","Dropdown","isOpen","size","DropdownToggle","caret","color","DropdownMenu","Component","Model","models","prevProps","fetch","then","response","json","data","newState","Years","year","Search","result","heading","source","vin","imageUrl","Card","CardBody","CardTitle","CardSubtitle","width","src","alt","CardText","Container","City","city","sectionStyle2","font","padding","justifyContent","sectionStyle3","textDecorationLine","Home","cityCallback","seletcedCity","refresh","selectedCity","searchCar","makerCallback","seletcedMaker","selectedMaker","modelCallback","seletcedModel","selectedModel","yearCallback","seletcedYear","selectedYear","make","console","log","model","makers","years","searchResult","searchEnabled","style","backgroundColor","backgroundPosition","backgroundSize","Row","Col","sm","Navbar","light","expand","NavbarBrand","Nav","className","navbar","NavItem","NavLink","href","InputGroup","InputGroupAddon","addonType","Button","disabled","xs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4129e14f.chunk.js","sourcesContent":["export const ApiKey = \"Nu279aV1ewl5am4KKR6Ege9yhi9nras5\";\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nclass Maker extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      dropDownValue: \"All Makes\"\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n      dropDownValue: prevState.dropDownValue\n    }));\n  }\n\n  changeValue(e) {\n    let text = e.target.textContent;\n    this.props.onSelect(text);\n    this.setState(prevState => ({\n      dropdownOpen: prevState.dropdownOpen,\n      dropDownValue: text\n    }));\n  }\n\n  render() {\n    let array = [];\n    if (this.props.maker) {\n      this.props.maker.forEach((item, i) => {\n        let dropdownItem = (\n          <DropdownItem key={i} onClick={this.changeValue}>\n            {item.item}\n          </DropdownItem>\n        );\n        array.push(dropdownItem);\n      });\n    }\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} size=\"lg\" toggle={this.toggle}>\n        <DropdownToggle caret color=\"info\">\n          {this.state.dropDownValue}\n        </DropdownToggle>\n        <DropdownMenu>{array}</DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default Maker;\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { ApiKey } from \"../ApiService\";\n\nclass Model extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.state = {\n      models: null,\n      dropdownOpen: false,\n      dropDownValue: \"All Models\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.maker !== prevProps.maker) {\n      if (this.props.maker) {\n        fetch(\n          \"https://marketcheck-prod.apigee.net/v1/search?api_key=\" +\n            ApiKey +\n            \"&radius=10&start=0&rows=0&make=\" +\n            this.props.maker +\n            \"&facets=model%7C0%7C100\"\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(data => {\n            let newState = this.state;\n            newState.dropDownValue = \"All Models\";\n            newState.models = data[\"facets\"][\"model\"];\n            this.setState(newState);\n          });\n      }\n    }\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      models: prevState.models,\n      dropdownOpen: !prevState.dropdownOpen,\n      dropDownValue: prevState.dropDownValue\n    }));\n  }\n\n  changeValue(e) {\n    let text = e.target.textContent;\n    this.props.onSelect(text);\n    this.setState(prevState => ({\n      models: prevState.models,\n      dropdownOpen: prevState.dropdownOpen,\n      dropDownValue: text\n    }));\n  }\n\n  render() {\n    let array = [];\n    if (this.state.models) {\n      this.state.models.forEach((item, i) => {\n        let dropdownItem = (\n          <DropdownItem key={i} onClick={this.changeValue}>\n            {item.item}\n          </DropdownItem>\n        );\n        array.push(dropdownItem);\n      });\n    } else {\n      let dropdownItem = (\n        <DropdownItem key={0}>Select Maker First</DropdownItem>\n      );\n      array.push(dropdownItem);\n    }\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} size=\"lg\" toggle={this.toggle}>\n        <DropdownToggle caret color=\"info\">\n          {this.state.dropDownValue}\n        </DropdownToggle>\n        <DropdownMenu>{array}</DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default Model;\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nclass Years extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      dropDownValue: \"Years\"\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n      dropDownValue: prevState.dropDownValue\n    }));\n  }\n\n  changeValue(e) {\n    let text = e.target.textContent;\n    this.props.onSelect(text);\n    this.setState(prevState => ({\n      dropdownOpen: prevState.dropdownOpen,\n      dropDownValue: text\n    }));\n  }\n\n  render() {\n    let array = [];\n    if (this.props.year) {\n      this.props.year.forEach((item, i) => {\n        let dropdownItem = (\n          <DropdownItem key={i} onClick={this.changeValue}>\n            {item.item}\n          </DropdownItem>\n        );\n        array.push(dropdownItem);\n      });\n    }\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} size=\"lg\" toggle={this.toggle}>\n        <DropdownToggle caret color=\"info\">\n          {this.state.dropDownValue}\n        </DropdownToggle>\n        <DropdownMenu>{array}</DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default Years;\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardLink,\n  CardTitle,\n  CardSubtitle\n} from \"reactstrap\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    let array = [];\n    if (this.props.result) {\n      this.props.result.forEach((item, i) => {\n        let heading = item[\"heading\"];\n        let source = item[\"source\"];\n        let vin = item[\"vin\"];\n        let imageUrl = item[\"media\"][\"photo_links\"][0];\n        let dropdownItem = (\n          <Card key={i}>\n            <CardBody>\n              <CardTitle>{heading}</CardTitle>\n              <CardSubtitle>{source}</CardSubtitle>\n            </CardBody>\n            <img width=\"50%\" src={imageUrl} alt=\"Card image cap\" />\n            <CardBody>\n              <CardText>{vin}</CardText>\n            </CardBody>\n          </Card>\n        );\n        array.push(dropdownItem);\n      });\n    }\n    return <Container>{array}</Container>;\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nclass City extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.changeValue = this.changeValue.bind(this);\n    this.state = {\n      dropdownOpen: false,\n      dropDownValue: \"Top City\"\n    };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n      dropDownValue: prevState.dropDownValue\n    }));\n  }\n\n  changeValue(e) {\n    let text = e.target.textContent;\n    this.props.onSelect(text);\n    this.setState(prevState => ({\n      dropdownOpen: prevState.dropdownOpen,\n      dropDownValue: text\n    }));\n  }\n\n  render() {\n    let array = [];\n    if (this.props.city) {\n      this.props.city.forEach((item, i) => {\n        let dropdownItem = (\n          <DropdownItem key={i} onClick={this.changeValue}>\n            {item.item}\n          </DropdownItem>\n        );\n        array.push(dropdownItem);\n      });\n    }\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} size=\"lg\" toggle={this.toggle}>\n        <DropdownToggle caret color=\"info\">\n          {this.state.dropDownValue}\n        </DropdownToggle>\n        <DropdownMenu>{array}</DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default City;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  InputGroup,\n  InputGroupAddon,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavItem,\n  NavLink,\n  Row\n} from \"reactstrap\";\nimport { ApiKey } from \"./ApiService\";\n\nimport Maker from \"./components/Maker\";\nimport Model from \"./components/Model\";\nimport Years from \"./components/Years\";\nimport Search from \"./components/Search\";\nimport City from \"./components/City\";\n\nvar sectionStyle2 = {\n  font: \"Ubuntu\",\n  padding: \"3rem\",\n  justifyContent: \"Center\"\n};\n\nvar sectionStyle3 = {\n  color: \"White\",\n  textDecorationLine: \"underline\"\n};\n\nvar resultStyle = {\n  font: \"Ubuntu\",\n  padding: \"1rem\",\n  justifyContent: \"Center\"\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.searchCar = this.searchCar.bind(this);\n    this.state = {\n      make: null,\n      year: null,\n      city: null,\n      selectedMaker: null,\n      selectedModel: null,\n      selectedYear: null,\n      selectedCity: null,\n      result: null\n    };\n  }\n\n  cityCallback = seletcedCity => {\n    let refresh = seletcedCity !== this.state.seletcedCity;\n    let newState = this.state;\n    newState.selectedCity = seletcedCity;\n    this.setState(newState);\n    if (refresh) {\n      this.searchCar(null);\n    }\n  };\n\n  makerCallback = seletcedMaker => {\n    let newState = this.state;\n    newState.selectedMaker = seletcedMaker;\n    this.setState(newState);\n  };\n\n  modelCallback = seletcedModel => {\n    let newState = this.state;\n    newState.selectedModel = seletcedModel;\n    this.setState(newState);\n  };\n\n  yearCallback = seletcedYear => {\n    let newState = this.state;\n    newState.selectedYear = seletcedYear;\n    this.setState(newState);\n  };\n\n  componentDidMount() {\n    fetch(\n      \"https://marketcheck-prod.apigee.net/v1/search?api_key=\" +\n        ApiKey +\n        \"&radius=10&start=0&rows=0&facets=year%7C0%7C50,make%7C0%7C100,city%7C0%7C100\"\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        this.setState({\n          make: data[\"facets\"][\"make\"],\n          year: data[\"facets\"][\"year\"],\n          city: data[\"facets\"][\"city\"]\n        });\n      });\n  }\n\n  searchCar(e) {\n    const searchEnabled =\n      this.state.selectedCity !== null &&\n      this.state.selectedMaker !== null &&\n      this.state.selectedModel !== null &&\n      this.state.selectedYear !== null;\n\n    if (searchEnabled) {\n      let city = this.state.selectedCity;\n      let make = this.state.selectedMaker;\n      let model = this.state.selectedModel;\n      let year = this.state.selectedYear;\n\n      http: fetch(\n        \"https://marketcheck-prod.apigee.net/v1/search?api_key=\" +\n          ApiKey +\n          \"&year=\" +\n          year +\n          \"&make=\" +\n          make +\n          \"&radius=10&city=\" +\n          city +\n          \"&model=\" +\n          model\n      )\n        .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n          let newState = this.state;\n          newState.result = data[\"listings\"];\n          this.setState(newState);\n        });\n    }\n  }\n\n  render() {\n    const makers = this.state.make;\n    const years = this.state.year;\n    const city = this.state.city;\n    const searchResult = this.state.result;\n    const searchEnabled =\n      this.state.selectedCity !== null &&\n      this.state.selectedMaker !== null &&\n      this.state.selectedModel !== null &&\n      this.state.selectedYear !== null;\n    return (\n      <div\n        style={{\n          backgroundColor: \"#ade6e9\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n          color: \"Blue\"\n        }}\n      >\n        <Container>\n          {/*Navigation*/}\n          <Row>\n            <Col sm=\"12\">\n              <Navbar color=\"info\" light expand=\"md\">\n                <NavbarBrand>\n                  <h2>Car Finder</h2>\n                </NavbarBrand>\n                <Nav className=\"ml-auto\" navbar>\n                  <NavItem>\n                    <NavLink href=\"https://apidocs.marketcheck.com/\">\n                      <h4 style={sectionStyle3}>\n                        This product uses the Marketcheck API\n                      </h4>\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Navbar>\n            </Col>\n          </Row>\n          <Row style={sectionStyle2}>\n            <Col sm=\"auto\">\n              <InputGroup>\n                <InputGroupAddon addonType=\"append\">\n                  <City city={city} onSelect={this.cityCallback} />\n\n                  <Maker maker={makers} onSelect={this.makerCallback} />\n\n                  <Model\n                    maker={this.state.selectedMaker}\n                    onSelect={this.modelCallback}\n                  />\n\n                  <Years year={years} onSelect={this.yearCallback} />\n\n                  <Button\n                    color=\"danger\"\n                    disabled={!searchEnabled}\n                    onClick={this.searchCar}\n                  >\n                    Search\n                  </Button>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n          </Row>\n          <Row style={sectionStyle2}>\n            <Col xs=\"auto\">\n              <Search result={searchResult} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./Home\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}